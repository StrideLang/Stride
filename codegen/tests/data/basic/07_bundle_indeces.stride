#========
# ARRAYS 
#========

# Value should resolve to an INTEGER
# User variable should be of type 'constant'

constant CONST {
    value:  16
    meta:   'Array Size.'
}

constant SIZE [4] {
    value:  [ 16, 32, 64, 128 ]
    meta:   'Array Sizes.'
}

# Declarations
constant Array [1] {}
constant Array [1+1] {}
constant Array [ CONST + 1] {}
constant Array [ CONST * 2] {}
constant Array_Parens [ ( CONST * 2 ) + 1 ] {}
constant Array [ CONST / 4 ] {}

constant Array_Expr [ SIZE [1] + SIZE [1 * 2] ] {}
constant Array_Expr2 [ SIZE [1] / SIZE [1 - 2] ] {}

# Properties

constant ONE [SIZE [4]] {}
constant TWO [SIZE [3]] {}
constant THREE [SIZE [2]] {}
constant FOUR [SIZE [1]] {}

constant TEST {
    value: ONE [ TWO [ SIZE[1] / 2] + THREE [ 16 + 32 ] ] + FOUR [64] * 2
}


AudioIn[1:2] >> AudioOut[1:2];

AudioIn[One:Two] >> AudioOut[One:Two];

AudioIn[A[1]:A[2]] >> AudioOut[A[1]:A[2]];

AudioIn[A[1]:A[1*2]] >> AudioOut[A[1]:A[1*2]];

#AudioIn[a():b()] >> AudioOut[a():b()];

#AudioIn[A[1:2]:A[3:4]] >> AudioOut[A[1:2]:A[3:4]];

AudioIn[1:2] >> Test () >> AudioOut[1:2];

Test () >> AudioOut[1:2];

AudioIn[1:2] >> Test ();

AudioIn[1:2] >>[ AudioOut[1:2], AudioOut[3:4]];
